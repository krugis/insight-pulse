# nginx/nginx.conf

worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    # Define an upstream for your FastAPI BFF service
    # 'app' is the service name in docker-compose, '8000' is its internal container port
    upstream bff_service {
        server app:8000;
    }

    # Optional: Define other upstreams if Nginx needs to proxy to them
    # upstream pulse_agent_manager_service {
    #     server pulse-agent-manager:8003;
    # }

    server {
        listen 80; # Nginx will listen for HTTP traffic on port 80
        server_name localhost; # In production, replace with your actual domain (e.g., yourdomain.com)

        # Root for serving static frontend files
        # This path inside the container will contain your frontend files
        root /usr/share/nginx/html;
        index index.html index.htm; # Default files to serve

        # Proxy API requests to your FastAPI BFF
        location /api/v1/ {
            proxy_pass http://bff_service/api/v1/; # Forward API requests to the BFF upstream
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Disable buffering for WebSockets/SSE if your API uses them
            proxy_buffering off;
        }

        # Handle all other requests by trying to serve static files first
        # This is common for Single Page Applications (SPAs)
        location / {
            try_files $uri $uri/ /index.html; # Serve index.html for root or if direct file not found
        }

        # Optional: For HTTPS (highly recommended for production)
        # listen 443 ssl;
        # ssl_certificate /etc/nginx/certs/yourdomain.crt; # Path to your certificate file in the container
        # ssl_certificate_key /etc/nginx/certs/yourdomain.key; # Path to your private key file in the container
        # # Include strong SSL/TLS settings (you'd create this file)
        # # include /etc/nginx/snippets/ssl-params.conf;
    }
}